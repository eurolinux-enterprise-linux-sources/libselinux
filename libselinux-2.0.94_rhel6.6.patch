diff --git a/libselinux/man/man3/security_compute_av.3 b/libselinux/man/man3/security_compute_av.3
index f2d9f30..92ddae1 100644
--- a/libselinux/man/man3/security_compute_av.3
+++ b/libselinux/man/man3/security_compute_av.3
@@ -21,8 +21,7 @@ the SELinux policy database in the kernel.
 .sp
 .BI "int security_compute_user(security_context_t "scon ", const char *" username ", security_context_t **" con );
 .sp
-.BI "int security_get_initial_context(const char *" name ", security_context_t
-"con );
+.BI "int security_get_initial_context(const char *" name ", security_context_t *" con );
 .sp
 .BI "int selinux_check_passwd_access(access_vector_t " requested );
 .sp
diff --git a/libselinux/man/man8/selinux.8 b/libselinux/man/man8/selinux.8
index 5caa592..8986d70 100644
--- a/libselinux/man/man8/selinux.8
+++ b/libselinux/man/man8/selinux.8
@@ -1,10 +1,8 @@
 .TH  "selinux"  "8"  "29 Apr 2005" "dwalsh@redhat.com" "SELinux Command Line documentation"
-
 .SH "NAME"
-selinux \- NSA Security-Enhanced Linux (SELinux)
-
+SELinux \- NSA Security-Enhanced Linux (SELinux)
+.
 .SH "DESCRIPTION"
-
 NSA Security-Enhanced Linux (SELinux) is an implementation of a
 flexible mandatory access control architecture in the Linux operating
 system.  The SELinux architecture provides general support for the
@@ -12,7 +10,7 @@ enforcement of many kinds of mandatory access control policies,
 including those based on the concepts of Type EnforcementÂ®, Role-
 Based Access Control, and Multi-Level Security.  Background
 information and technical documentation about SELinux can be found at
-http://www.nsa.gov/selinux.
+http://www.nsa.gov/research/selinux.
 
 The
 .I /etc/selinux/config
@@ -39,44 +37,72 @@ The
 configuration file also controls what policy
 is active on the system.  SELinux allows for multiple policies to be
 installed on the system, but only one policy may be active at any
-given time.  At present, two kinds of SELinux policy exist: targeted
-and strict.  The targeted policy is designed as a policy where most
-processes operate without restrictions, and only specific services are
+given time.  At present, multiple kinds of SELinux policy exist: targeted, 
+mls for example.  The targeted policy is designed as a policy where most
+user processes operate without restrictions, and only specific services are
 placed into distinct security domains that are confined by the policy.
 For example, the user would run in a completely unconfined domain
 while the named daemon or apache daemon would run in a specific domain
-tailored to its operation.  The strict policy is designed as a policy
-where all processes are partitioned into fine-grained security domains
-and confined by policy.  It is anticipated in the future that other
-policies will be created (Multi-Level Security for example).  You can
+tailored to its operation.  The MLS (Multi-Level Security) policy is designed 
+as a policy where all processes are partitioned into fine-grained security 
+domains and confined by policy.  MLS also supports the Bell And LaPadula model, where processes are not only confined by the type but also the level of the data.
+
+You can
 define which policy you will run by setting the
 .B SELINUXTYPE
 environment variable within
-.I /etc/selinux/config.
+.IR /etc/selinux/config .
+You must reboot and possibly relabel if you change the policy type to have it take effect on the system.
 The corresponding
 policy configuration for each such policy must be installed in the
-/etc/selinux/SELINUXTYPE/ directories.
+.I /etc/selinux/{SELINUXTYPE}/
+directories.
 
 A given SELinux policy can be customized further based on a set of
 compile-time tunable options and a set of runtime policy booleans.
-.B system-config-securitylevel
+.B \%system\-config\-selinux
 allows customization of these booleans and tunables.
 
-Many domains that are protected by SELinux also include selinux man pages explainging how to customize their policy.  
-
-.SH FILE LABELING
-
+Many domains that are protected by SELinux also include SELinux man pages explaining how to customize their policy.  
+.
+.SH "FILE LABELING"
 All files, directories, devices ... have a security context/label associated with them.  These context are stored in the extended attributes of the file system.
-Problems with SELinux often arise from the file system being mislabeled. This can be caused by booting the machine with a non selinux kernel.  If you see an error message containing file_t, that is usually a good indicator that you have a serious problem with file system labeling.  
+Problems with SELinux often arise from the file system being mislabeled. This can be caused by booting the machine with a non SELinux kernel.  If you see an error message containing file_t, that is usually a good indicator that you have a serious problem with file system labeling.  
 
-The best way to relabel the file system is to create the flag file /.autorelabel and reboot.  system-config-securitylevel, also has this capability.  The restorcon/fixfiles commands are also available for relabeling files. 
-  
+The best way to relabel the file system is to create the flag file
+.I /.autorelabel
+and reboot.
+.BR system\-config\-selinux ,
+also has this capability.  The
+.BR restorecon / fixfiles
+commands are also available for relabeling files.
+.
 .SH AUTHOR	
 This manual page was written by Dan Walsh <dwalsh@redhat.com>.
-
+.
+.SH FILES
+.I /etc/selinux/config
+.
 .SH "SEE ALSO"
-booleans(8), setsebool(8), selinuxenabled(8), togglesebool(8), restorecon(8), setfiles(8), ftpd_selinux(8), named_selinux(8), rsync_selinux(8), httpd_selinux(8), nfs_selinux(8), samba_selinux(8), kerberos_selinux(8), nis_selinux(8), ypbind_selinux(8)
+.ad l
+.nh
+.BR booleans (8),
+.BR setsebool (8),
+.BR togglesebool (8),
+.BR restorecon (8),
+.BR fixfiles (8),
+.BR setfiles (8),
+.BR semanage (8)
 
+Every confined service on the system has a man page in the following format:
+.br
 
-.SH FILES
-/etc/selinux/config
+.B <servicename>_selinux(8)
+
+For example, httpd has the 
+.B httpd_selinux(8) 
+man page.
+
+.B man -k selinux 
+
+Will list all SELinux man pages.
diff --git a/libselinux/utils/getdefaultcon.c b/libselinux/utils/getdefaultcon.c
index e6eb98b..cc53ab3 100644
--- a/libselinux/utils/getdefaultcon.c
+++ b/libselinux/utils/getdefaultcon.c
@@ -11,7 +11,7 @@
 
 void usage(char *name, char *detail, int rc)
 {
-	fprintf(stderr, "usage:  %s [-l level] user fromcon\n", name);
+	fprintf(stderr, "usage:  %s [-l level] user [fromcon]\n", name);
 	if (detail)
 		fprintf(stderr, "%s:  %s\n", name, detail);
 	exit(rc);
@@ -74,7 +74,7 @@ int main(int argc, char **argv)
 		if (verbose) {
 			printf("%s: %s from %s %s %s %s -> %s\n", argv[0], user, cur_context, seuser, role, level, usercon);
 		} else {
-			printf("%s", usercon);
+			printf("%s\n", usercon);
 		}
 	}
 
