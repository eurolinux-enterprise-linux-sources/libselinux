diff -up libselinux-2.0.94/include/selinux/selinux.h~ libselinux-2.0.94/include/selinux/selinux.h
--- libselinux-2.0.94/include/selinux/selinux.h~	2010-03-24 15:52:21.000000000 -0400
+++ libselinux-2.0.94/include/selinux/selinux.h	2011-05-25 13:21:53.959718346 -0400
@@ -514,6 +514,9 @@ extern int selinux_check_securetty_conte
    which performs the initial mount of selinuxfs. */
 void set_selinuxmnt(char *mnt);
 
+/* clear selinuxmnt variable and free allocated memory */
+void fini_selinuxmnt(void);
+
 /* Execute a helper for rpm in an appropriate security context. */
 extern int rpm_execcon(unsigned int verified,
 		       const char *filename,
diff -up libselinux-2.0.94/src/init.c~ libselinux-2.0.94/src/init.c
--- libselinux-2.0.94/src/init.c~	2010-03-24 15:52:20.000000000 -0400
+++ libselinux-2.0.94/src/init.c	2011-05-24 09:42:12.954461134 -0400
@@ -96,12 +96,14 @@ static void init_selinuxmnt(void)
 	return;
 }
 
-static void fini_selinuxmnt(void)
+void fini_selinuxmnt(void)
 {
 	free(selinux_mnt);
 	selinux_mnt = NULL;
 }
 
+hidden_def(fini_selinuxmnt)
+
 void set_selinuxmnt(char *mnt)
 {
 	selinux_mnt = strdup(mnt);
diff -up libselinux-2.0.94/src/load_policy.c~ libselinux-2.0.94/src/load_policy.c
--- libselinux-2.0.94/src/load_policy.c~	2010-03-24 15:52:20.000000000 -0400
+++ libselinux-2.0.94/src/load_policy.c	2011-05-24 09:40:33.413546487 -0400
@@ -398,6 +398,7 @@ int selinux_init_load_policy(int *enforc
 		if (rc == 0) {
 			/* Successfully disabled, so umount selinuxfs too. */
 			umount(SELINUXMNT);
+			fini_selinuxmnt();
 		}
 		/*
 		 * If we failed to disable, SELinux will still be 
diff -up libselinux-2.0.94/src/selinux_internal.h~ libselinux-2.0.94/src/selinux_internal.h
--- libselinux-2.0.94/src/selinux_internal.h~	2011-05-24 09:39:20.215872525 -0400
+++ libselinux-2.0.94/src/selinux_internal.h	2011-05-25 13:26:09.065607913 -0400
@@ -3,6 +3,7 @@
 #include "dso.h"
 
 hidden_proto(selinux_mkload_policy)
+    hidden_proto(fini_selinuxmnt)
     hidden_proto(set_selinuxmnt)
     hidden_proto(security_disable)
     hidden_proto(security_policyvers)
